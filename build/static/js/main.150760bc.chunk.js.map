{"version":3,"sources":["components/Info/index.js","components/Projects/index.js","components/Links/HtmlLinks/index.js","components/Svg/index.js","components/Links/IconsLinks/index.js","components/Links/JsonLinks/index.js","components/Links/PlaintextLinks/index.js","components/Links/index.js","App.js","serviceWorker.js","index.js"],"names":["Info","ian","this","props","className","name","title","bio","href","Component","Projects","CardDeck","projects","map","project","Col","sm","md","lg","Card","Body","summary","tech","Footer","siteUrl","target","codeUrl","disabled","Button","variant","index","links","link","displayText","url","replace","length","slice","rel","email","xmlns","width","height","viewBox","d","linkedin","phone","resume","github","svg","json","JSON","stringify","value","text","Links","useState","mode","setMode","availableModes","modeName","onClick","newMode","Math","floor","random","html","icons","plaintext","App","Row","class","Boolean","window","location","hostname","match","ReactDOM","render","ianWalston","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.150760bc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\n\nexport class Info extends Component {\n    render() {\n        const ian = this.props.ian\n        return (\n            <div>\n                <h1 className='display-4'>{ian.name}</h1>\n                <h2>{ian.title}</h2>\n                <p className='lead'>{ian.bio}</p>\n                <a href='https://github.com/IanWalston/ianwalston.github.io'>See the React code for this portfolio</a>\n            </div>\n        )\n    }\n}\n\nexport default Info\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Row, Col, Card, CardDeck, Button } from \"react-bootstrap\";\n\nexport class Projects extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Projects</h2>\n                <CardDeck>\n                    {this.props.projects.map(project => {\n                        return (\n                            <Col sm={6} md={4} lg={3} className=\"mt-4\">\n                                <Card>\n                                    <Card.Body className=\"card-body\">\n                                        <h5 className=\"card-title\">\n                                            {project.summary}\n                                        </h5>\n                                        <p className=\"card-text\">\n                                            {project.tech}\n                                        </p>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <a\n                                            href={project.siteUrl}\n                                            target=\"_blank\"\n                                            className=\"btn btn-primary\"\n                                        >\n                                            site\n                                        </a>\n                                        {project.codeUrl ? (\n                                            <a\n                                                target=\"_blank\"\n                                                className=\"float-right d-block btn btn-success\"\n                                                href={project.codeUrl}\n                                                disabled={!project.codeUrl}\n                                            >\n                                                code\n                                            </a>\n                                        ) : (\n                                            <Button\n                                                variant=\"success\"\n                                                className=\"float-right d-block\"\n                                                disabled\n                                            >\n                                                code\n                                            </Button>\n                                        )}\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        );\n                    })}\n                </CardDeck>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","import React from \"react\";\n\nexport default function index(props) {\n    return (\n        <div className=\"regalurLinks\">\n            {props.links.map(link => {\n                let displayText = \"\";\n\n                if (link.displayText) {\n                    displayText = link.displayText;\n                } else {\n                    displayText = link.url.replace(/^https:\\/\\//, \"\");\n                    if (displayText.length >= 40) {\n                        displayText = displayText.slice(0, 38) + \"...\";\n                    }\n                }\n\n                return (\n                    <div>\n                        <span>{link.name}: </span>\n                        <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={link.url}\n                        >\n                            {displayText}\n                        </a>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";   \n\n\nexport default {\n    email : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\"><path d=\"M12 2.02c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 12.55l-5.992-4.57h11.983l-5.991 4.57zm0 1.288l-6-4.629v6.771h12v-6.771l-6 4.629z\"/></svg>,\n\n    linkedin : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\"><path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z\"/></svg>,\n\n    phone : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4.5 17.311l-1.76-3.397-1.032.505c-1.12.543-3.4-3.91-2.305-4.497l1.042-.513-1.747-3.409-1.053.52c-3.601 1.877 2.117 12.991 5.8 11.308l1.055-.517z\"/></svg>,\n\n    resume : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\"><path d=\"M21.312 12.644c-.972-1.189-3.646-4.212-4.597-5.284l-1.784 1.018 4.657 5.35c.623.692.459 1.704-.376 2.239-.773.497-5.341 3.376-6.386 4.035-.074-.721-.358-1.391-.826-1.948-.469-.557-6.115-7.376-7.523-9.178-.469-.601-.575-1.246-.295-1.817.268-.549.842-.918 1.43-.918.919 0 1.408.655 1.549 1.215.16.641-.035 1.231-.623 1.685l1.329 1.624 7.796-4.446c1.422-1.051 1.822-2.991.93-4.513-.618-1.053-1.759-1.706-2.978-1.706-1.188 0-.793-.016-9.565 4.475-1.234.591-2.05 1.787-2.05 3.202 0 .87.308 1.756.889 2.487 1.427 1.794 7.561 9.185 7.616 9.257.371.493.427 1.119.15 1.673-.277.555-.812.886-1.429.886-.919 0-1.408-.655-1.549-1.216-.156-.629.012-1.208.604-1.654l-1.277-1.545c-.822.665-1.277 1.496-1.377 2.442-.232 2.205 1.525 3.993 3.613 3.993.596 0 1.311-.177 1.841-.51l9.427-5.946c.957-.664 1.492-1.781 1.492-2.897 0-.744-.24-1.454-.688-2.003zm-8.292-10.492c.188-.087.398-.134.609-.134.532 0 .997.281 1.243.752.312.596.226 1.469-.548 1.912l-5.097 2.888c-.051-1.089-.579-2.081-1.455-2.732l5.248-2.686zm3.254 10.055l-4.828 2.823-.645-.781 4.805-2.808.668.766zm-6.96.238l4.75-2.777.668.768-4.773 2.791-.645-.782zm8.49 1.519l-4.881 2.854-.645-.781 4.858-2.84.668.767z\"/></svg>,\n\n    github : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\"><path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-4.466 19.59c-.405.078-.534-.171-.534-.384v-2.195c0-.747-.262-1.233-.55-1.481 1.782-.198 3.654-.875 3.654-3.947 0-.874-.312-1.588-.823-2.147.082-.202.356-1.016-.079-2.117 0 0-.671-.215-2.198.82-.64-.18-1.324-.267-2.004-.271-.68.003-1.364.091-2.003.269-1.528-1.035-2.2-.82-2.2-.82-.434 1.102-.16 1.915-.077 2.118-.512.56-.824 1.273-.824 2.147 0 3.064 1.867 3.751 3.645 3.954-.229.2-.436.552-.508 1.07-.457.204-1.614.557-2.328-.666 0 0-.423-.768-1.227-.825 0 0-.78-.01-.055.487 0 0 .525.246.889 1.17 0 0 .463 1.428 2.688.944v1.489c0 .211-.129.459-.528.385-3.18-1.057-5.472-4.056-5.472-7.59 0-4.419 3.582-8 8-8s8 3.581 8 8c0 3.533-2.289 6.531-5.466 7.59z\"/></svg>\n\n}","import React from \"react\";\nimport svg from \"../../Svg\";\n\nexport default function index(props) {\n    return (\n        <div className={\"iconLinks\"}>\n            {props.links.map(link => {\n                return (\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={link.url}\n                        title={link.name}\n                    >\n                        {svg[link.name]}\n                    </a>\n                );\n            })}\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function index(props) {\n    const json = JSON.stringify(props.links, null, 4);\n\n    return <textarea className=\"json\" value={json} />;\n}\n","import React from 'react'\n\nexport default function index(props) {\n    let text = \"\";\n\n    props.links.map(link => {\n        return (text += `${link.name}: ${\n            link.displayText ? link.displayText : link.url\n        }\\n\\n`);\n    });\n\n    return <textarea value={text} />;\n}\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Button } from \"react-bootstrap\";\nimport \"./style.css\";\nimport HtmlLinks from './HtmlLinks'\nimport IconsLinks from './IconsLinks'\nimport JsonLinks from './JsonLinks'\nimport PlaintextLinks from './PlaintextLinks'\n\nexport default function Links(props) {\n    const [mode, setMode] = useState(\"html\");\n\n    const availableModes = [\"html\", \"icons\", \"json\", \"plaintext\"];\n\n    const getRandomMode = () => {\n        let newMode = \"\";\n        do {\n            newMode = availableModes[Math.floor(Math.random() * 4)];\n        } while (newMode === mode);\n        setMode(newMode)\n    };\n\n    return (\n        <div className=\"Links\">\n            <h2 className=\"text-center\">Links</h2>\n            <div className=\"buttons\">\n                {availableModes.map(modeName => (\n                    <Button\n                        onClick={() => setMode(modeName)}\n                        className={mode === modeName && \"active\"}\n                    >\n                        {modeName}\n                    </Button>\n                ))}\n                <Button onClick={getRandomMode} variant='warning'>random</Button>\n            </div>\n                    {{\n                        html: <HtmlLinks {...props} />,\n                        icons: <IconsLinks  {...props} />,\n                        json: <JsonLinks  {...props} />,\n                        plaintext: <PlaintextLinks  {...props} />\n                    }[mode]}\n            <ReactTooltip />\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport Info from \"./components/Info\";\nimport Projects from \"./components/Projects/index\";\nimport Links from \"./components/Links\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport class App extends Component {\n    render() {\n        const ian = this.props.ian;\n        return (\n            <div className=\"container mt-4 pt-4\">\n                <Row>\n                    <Col md={8}>\n                        <Info {...this.props} />\n                    </Col>\n                    <Col md={4}>\n                        <Links links={ian.links} />\n                    </Col>\n                </Row>\n                <hr className=\"my-4\" />\n                <Row>\n                    <Col>\n                        <Projects projects={ian.projects} />\n                    </Col>\n                </Row>\n                <hr className=\"mt-4\" />\n                <footer class=\"page-footer font-small text-center py-3\">\n                    Ian Walston 2020\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ianWalston from \"./info.json\";\n\nReactDOM.render(<App ian={ianWalston} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}